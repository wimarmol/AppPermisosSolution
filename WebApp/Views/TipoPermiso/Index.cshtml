@{ }
<div class="container">
    <div class="row">
        <div class="form-group col-md-4">
            <h5>Tipo de permiso</h5>
            <input id="inputId" value="0" type="hidden"/>
            <input class="form-control hint--top" id="inputDescripcion" required type="text" value="" placeholder="Ingrese la descripción"
                   data-hint="Lorem Ipsum Dolor Sit Amet" />
            <div id="alertaTipoPermisoDescripcion" class="message-error-tooltip hide"></div>
            <br />
            <button class="btn btn-sm btn-primary" id="btnSaveTipoPermiso">Grabar</button>
            <button class="btn btn-sm btn-secondary" id="btnCancelTipoPermiso">Cancelar</button>
        </div>
        <div class="col-md-7 ml-2">
            <h5>Listado tipos de permiso</h5>
            <table id="tableTipoPermiso" class="table table-condensed table-sm table-bordered table-striped table-font-min">
            </table>
        </div>
    </div>
</div>
@{ 
<script>
    const loadData = async () => {
        let url = "../TipoPermiso/list"
        let response = await fetch(url, {
            method: "GET",
            headers: { 'Content-Type': "application/json; charset=utf-8" },
        });
        response = await response.json();
        if (response.lista !== null) {
            buildTableCatalog(response.lista, tableTipoPermiso, editElement, deleteElement);
        } else {
            message("alertaError", "Error! La lista no se pudo desplegar");
        }
    };
    const editElement = async (item) => {        
        btnSaveTipoPermiso.textContent = "Actualizar"
        inputId.value = item.id;
        inputDescripcion.value = item.descripcion;
    };
    const deleteElement = async (item) => {  
        let url = "../TipoPermiso/delete"
        const data = {
            'Id': item.id,          
        };
        let response = await fetch(url, {
            method: "DELETE",
            headers: { 'Content-Type': "application/json; charset=utf-8" },
            body: JSON.stringify(data),
        });
        response = await response.json();
        if (response.id > 0) {
            await loadData();
            message("alertaOK", "El elemento fue eliminado");
            reset();
        } else if (response.id < 0) {
            message("alertaError", "Error! No se pudo enviar la solicitud");
        } else {
            message("alertaError", "No se puede eliminar catálagos en uso");
        }
    };

    const reset = () => {
        inputId.value = 0;
        inputDescripcion.value = "";
        btnSaveTipoPermiso.textContent = "Grabar";
    };

    window.addEventListener('load', async ()=> {
        await loadData();
        btnCancelTipoPermiso.onclick = () => {
            reset();
        };
        btnSaveTipoPermiso.onclick = async () => {
            let descripcion = inputDescripcion.value;
            let id = inputId.value;
            let url, method, messageTxt;
            if (descripcion.length > 0) {                
                const data = {
                    'Id': id,
                    'Descripcion': descripcion,
                };
                if (btnSaveTipoPermiso.textContent === "Grabar") {
                    url = "../TipoPermiso/save";
                    method = "POST"
                    messageTxt = "Tipo de Permiso ingresado";
                } else {
                    url = "../TipoPermiso/update";
                    method = "PUT"
                    messageTxt = "Tipo de Permiso actualizado";
                }
                let response = await fetch(url, {
                    method: method,
                    headers: { 'Content-Type': "application/json; charset=utf-8" },
                    body: JSON.stringify(data),
                });
                response = await response.json();
                if (response.id > 0) {
                    await loadData();
                    message("alertaOK", messageTxt);
                    reset();
                } else if (response.id < 0) {
                    message("alertaError", "Error! No se pudo enviar la solicitud");
                } else {
                    message("alertaError", "Tipo de permiso duplicado");
                }
            }
            else {
                alertMessage("inputDescripcion", "alertaTipoPermisoDescripcion", "Ingrese la descripción");
            };
        };
    }, false);
</script>

}